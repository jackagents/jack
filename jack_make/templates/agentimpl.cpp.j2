#include <{{ project.bumpy_case|lower }}/impl/{% if is_team %}teams{% else %}agents{% endif %}/{{ agent.id.bumpy_case|lower }}impl.h>

{{ project.emit_cpp_namespace_begin() }}
/******************************************************************************
 * Constructor/Destructors
 ******************************************************************************/
{{ agent.id.bumpy_case }}::{{ agent.id.bumpy_case }}(aos::jack::Engine& bdi, std::string_view name)
: {{ agent.id.bumpy_case }}Meta(bdi, name) {
}

{{ agent.id.bumpy_case }}::{{ agent.id.bumpy_case }}(const {{ agent.id.bumpy_case }}* other, std::string_view name)
: {{ agent.id.bumpy_case }}Meta(other, name) {
}

/******************************************************************************
 * Action Handlers
 ******************************************************************************/
{%- for action in workspace.get_actions_used_by_entity(agent.id.as_ref()) %}

aos::jack::Event::Status {{ agent.id.bumpy_case }}::on{{ action.id.bumpy_case }}({{ workspace.get_action_cpp_function_prototype_args(action).as_str() }})
{
    /// \todo: autogenerated
    return aos::jack::Event::Status::FAIL;
}
{%- endfor %}
{{ project.emit_cpp_namespace_end() }}
