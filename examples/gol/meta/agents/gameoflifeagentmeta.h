#ifndef GOL_GAME_OF_LIFE_AGENT_META_H
#define GOL_GAME_OF_LIFE_AGENT_META_H

/******************************************************************************
 * This file has been automatically generated by jack-make
 ******************************************************************************/

/// JACK
#include <jack/agent.h>
#include <jack/handles.h> /// AgentHandle
#include <jack/promise.h>
#include <jack/engine/uuid.h>
#include <jack/events/event.h>

/// Third Party
#include <string_view>

namespace aos::jack
{
class Engine;
}



class CellInfo;
class GameOfLifeAgent;

/******************************************************************************
 * \class  GameOfLifeAgentMeta
 * \author jackmake
 * \source gol.jack
 ******************************************************************************/
class GameOfLifeAgentMeta : public aos::jack::Agent
{
public:
    /**************************************************************************
     * Constructor/Destructors
     **************************************************************************/
    GameOfLifeAgentMeta(aos::jack::Engine& bdi, std::string_view name);
    GameOfLifeAgentMeta(const GameOfLifeAgentMeta* other, std::string_view name);
    virtual ~GameOfLifeAgentMeta() {}

    GameOfLifeAgentMeta(const GameOfLifeAgentMeta& other) = delete;
    GameOfLifeAgentMeta& operator=(const GameOfLifeAgentMeta& other) = delete;

    /**************************************************************************
     * Functions
     **************************************************************************/
    aos::jack::Agent* clone(std::string_view name) const override;

    /// \note Goals
    aos::jack::GoalPursue pursueModelLife(aos::jack::GoalPersistent persistent, const aos::jack::UniqueId& id = aos::jack::UniqueId::random());

protected:
    /// Link the action handler to this agent's derived action handler.
    void setupHandlers();

public:
    /**************************************************************************
     * Static Functions
     **************************************************************************/
    /// Create an instance of the agent and return the agent handle
    static aos::jack::AgentHandle create(aos::jack::Engine& bdi, std::string_view name, const aos::jack::UniqueId& uuid = aos::jack::UniqueId::random());

    /// Create an instance of the agent and return a pointer to the agent
    static GameOfLifeAgent* createInstance(aos::jack::Engine& bdi, std::string_view name, const aos::jack::UniqueId& uuid = aos::jack::UniqueId::random());

    /**************************************************************************
     * Static Fields
     **************************************************************************/
    /// The name of the C++ class
    static constexpr inline std::string_view CLASS_NAME = "GameOfLifeAgent";

    /// The name of this object in the JACK model
    static constexpr inline std::string_view MODEL_NAME = "gol.Game Of Life Agent Template";
};

#endif /// GOL_GAME_OF_LIFE_AGENT_META_H